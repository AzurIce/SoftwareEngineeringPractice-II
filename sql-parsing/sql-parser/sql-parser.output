State 19 conflicts: 1 shift/reduce
State 47 conflicts: 1 shift/reduce
State 48 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 50 conflicts: 1 shift/reduce
State 51 conflicts: 5 shift/reduce


Grammar

    0 $accept: select_stmt $end

    1 select_stmt: SELECT value_expr_list ';'

    2 value_expr_list: value_expr
    3                | value_expr ',' value_expr

    4 value_expr: arithmetic_expr
    5           | string_expr
    6           | boolean_expr

    7 arithmetic_expr: INTEGER
    8                | FLOAT
    9                | arithmetic_expr '+' arithmetic_expr
   10                | arithmetic_expr '-' arithmetic_expr
   11                | arithmetic_expr '*' arithmetic_expr
   12                | arithmetic_expr '/' arithmetic_expr
   13                | arithmetic_expr '%' arithmetic_expr
   14                | '-' arithmetic_expr
   15                | '(' arithmetic_expr ')'

   16 string_expr: STRING

   17 boolean_expr: BOOLEAN
   18             | arithmetic_expr CMP_LESS arithmetic_expr
   19             | arithmetic_expr CMP_GREATER arithmetic_expr
   20             | arithmetic_expr CMP_EQ arithmetic_expr
   21             | arithmetic_expr CMP_LEQ arithmetic_expr
   22             | arithmetic_expr CMP_GEQ arithmetic_expr
   23             | arithmetic_expr CMP_NEQ arithmetic_expr
   24             | boolean_expr OR boolean_expr
   25             | boolean_expr AND boolean_expr
   26             | NOT boolean_expr
   27             | '(' boolean_expr ')'


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 13
    '(' (40) 15 27
    ')' (41) 15 27
    '*' (42) 11
    '+' (43) 9
    ',' (44) 3
    '-' (45) 10 14
    '/' (47) 12
    ';' (59) 1
    error (256)
    STRING <strval> (258) 16
    INTEGER <intval> (259) 7
    FLOAT <floatval> (260) 8
    BOOLEAN <intval> (261) 17
    CMP_LESS (262) 18
    CMP_GREATER (263) 19
    CMP_EQ (264) 20
    CMP_LEQ (265) 21
    CMP_GEQ (266) 22
    CMP_NEQ (267) 23
    OR (268) 24
    AND (269) 25
    NOT (270) 26
    NEG (271)
    SELECT (272) 1


Nonterminals, with rules where they appear

    $accept (27)
        on left: 0
    select_stmt (28)
        on left: 1
        on right: 0
    value_expr_list (29)
        on left: 2 3
        on right: 1
    value_expr (30)
        on left: 4 5 6
        on right: 2 3
    arithmetic_expr (31)
        on left: 7 8 9 10 11 12 13 14 15
        on right: 4 9 10 11 12 13 14 15 18 19 20 21 22 23
    string_expr (32)
        on left: 16
        on right: 5
    boolean_expr (33)
        on left: 17 18 19 20 21 22 23 24 25 26 27
        on right: 6 24 25 26 27


State 0

    0 $accept: • select_stmt $end

    SELECT  shift, and go to state 1

    select_stmt  go to state 2


State 1

    1 select_stmt: SELECT • value_expr_list ';'

    STRING   shift, and go to state 3
    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    BOOLEAN  shift, and go to state 6
    NOT      shift, and go to state 7
    '-'      shift, and go to state 8
    '('      shift, and go to state 9

    value_expr_list  go to state 10
    value_expr       go to state 11
    arithmetic_expr  go to state 12
    string_expr      go to state 13
    boolean_expr     go to state 14


State 2

    0 $accept: select_stmt • $end

    $end  shift, and go to state 15


State 3

   16 string_expr: STRING •

    $default  reduce using rule 16 (string_expr)


State 4

    7 arithmetic_expr: INTEGER •

    $default  reduce using rule 7 (arithmetic_expr)


State 5

    8 arithmetic_expr: FLOAT •

    $default  reduce using rule 8 (arithmetic_expr)


State 6

   17 boolean_expr: BOOLEAN •

    $default  reduce using rule 17 (boolean_expr)


State 7

   26 boolean_expr: NOT • boolean_expr

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    BOOLEAN  shift, and go to state 6
    NOT      shift, and go to state 7
    '-'      shift, and go to state 8
    '('      shift, and go to state 9

    arithmetic_expr  go to state 16
    boolean_expr     go to state 17


State 8

   14 arithmetic_expr: '-' • arithmetic_expr

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    '-'      shift, and go to state 8
    '('      shift, and go to state 18

    arithmetic_expr  go to state 19


State 9

   15 arithmetic_expr: '(' • arithmetic_expr ')'
   27 boolean_expr: '(' • boolean_expr ')'

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    BOOLEAN  shift, and go to state 6
    NOT      shift, and go to state 7
    '-'      shift, and go to state 8
    '('      shift, and go to state 9

    arithmetic_expr  go to state 20
    boolean_expr     go to state 21


State 10

    1 select_stmt: SELECT value_expr_list • ';'

    ';'  shift, and go to state 22


State 11

    2 value_expr_list: value_expr •
    3                | value_expr • ',' value_expr

    ','  shift, and go to state 23

    $default  reduce using rule 2 (value_expr_list)


State 12

    4 value_expr: arithmetic_expr •
    9 arithmetic_expr: arithmetic_expr • '+' arithmetic_expr
   10                | arithmetic_expr • '-' arithmetic_expr
   11                | arithmetic_expr • '*' arithmetic_expr
   12                | arithmetic_expr • '/' arithmetic_expr
   13                | arithmetic_expr • '%' arithmetic_expr
   18 boolean_expr: arithmetic_expr • CMP_LESS arithmetic_expr
   19             | arithmetic_expr • CMP_GREATER arithmetic_expr
   20             | arithmetic_expr • CMP_EQ arithmetic_expr
   21             | arithmetic_expr • CMP_LEQ arithmetic_expr
   22             | arithmetic_expr • CMP_GEQ arithmetic_expr
   23             | arithmetic_expr • CMP_NEQ arithmetic_expr

    CMP_LESS     shift, and go to state 24
    CMP_GREATER  shift, and go to state 25
    CMP_EQ       shift, and go to state 26
    CMP_LEQ      shift, and go to state 27
    CMP_GEQ      shift, and go to state 28
    CMP_NEQ      shift, and go to state 29
    '+'          shift, and go to state 30
    '-'          shift, and go to state 31
    '*'          shift, and go to state 32
    '/'          shift, and go to state 33
    '%'          shift, and go to state 34

    $default  reduce using rule 4 (value_expr)


State 13

    5 value_expr: string_expr •

    $default  reduce using rule 5 (value_expr)


State 14

    6 value_expr: boolean_expr •
   24 boolean_expr: boolean_expr • OR boolean_expr
   25             | boolean_expr • AND boolean_expr

    OR   shift, and go to state 35
    AND  shift, and go to state 36

    $default  reduce using rule 6 (value_expr)


State 15

    0 $accept: select_stmt $end •

    $default  accept


State 16

    9 arithmetic_expr: arithmetic_expr • '+' arithmetic_expr
   10                | arithmetic_expr • '-' arithmetic_expr
   11                | arithmetic_expr • '*' arithmetic_expr
   12                | arithmetic_expr • '/' arithmetic_expr
   13                | arithmetic_expr • '%' arithmetic_expr
   18 boolean_expr: arithmetic_expr • CMP_LESS arithmetic_expr
   19             | arithmetic_expr • CMP_GREATER arithmetic_expr
   20             | arithmetic_expr • CMP_EQ arithmetic_expr
   21             | arithmetic_expr • CMP_LEQ arithmetic_expr
   22             | arithmetic_expr • CMP_GEQ arithmetic_expr
   23             | arithmetic_expr • CMP_NEQ arithmetic_expr

    CMP_LESS     shift, and go to state 24
    CMP_GREATER  shift, and go to state 25
    CMP_EQ       shift, and go to state 26
    CMP_LEQ      shift, and go to state 27
    CMP_GEQ      shift, and go to state 28
    CMP_NEQ      shift, and go to state 29
    '+'          shift, and go to state 30
    '-'          shift, and go to state 31
    '*'          shift, and go to state 32
    '/'          shift, and go to state 33
    '%'          shift, and go to state 34


State 17

   24 boolean_expr: boolean_expr • OR boolean_expr
   25             | boolean_expr • AND boolean_expr
   26             | NOT boolean_expr •

    $default  reduce using rule 26 (boolean_expr)


State 18

   15 arithmetic_expr: '(' • arithmetic_expr ')'

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    '-'      shift, and go to state 8
    '('      shift, and go to state 18

    arithmetic_expr  go to state 37


State 19

    9 arithmetic_expr: arithmetic_expr • '+' arithmetic_expr
   10                | arithmetic_expr • '-' arithmetic_expr
   11                | arithmetic_expr • '*' arithmetic_expr
   12                | arithmetic_expr • '/' arithmetic_expr
   13                | arithmetic_expr • '%' arithmetic_expr
   14                | '-' arithmetic_expr •

    '%'  shift, and go to state 34

    '%'       [reduce using rule 14 (arithmetic_expr)]
    $default  reduce using rule 14 (arithmetic_expr)


State 20

    9 arithmetic_expr: arithmetic_expr • '+' arithmetic_expr
   10                | arithmetic_expr • '-' arithmetic_expr
   11                | arithmetic_expr • '*' arithmetic_expr
   12                | arithmetic_expr • '/' arithmetic_expr
   13                | arithmetic_expr • '%' arithmetic_expr
   15                | '(' arithmetic_expr • ')'
   18 boolean_expr: arithmetic_expr • CMP_LESS arithmetic_expr
   19             | arithmetic_expr • CMP_GREATER arithmetic_expr
   20             | arithmetic_expr • CMP_EQ arithmetic_expr
   21             | arithmetic_expr • CMP_LEQ arithmetic_expr
   22             | arithmetic_expr • CMP_GEQ arithmetic_expr
   23             | arithmetic_expr • CMP_NEQ arithmetic_expr

    CMP_LESS     shift, and go to state 24
    CMP_GREATER  shift, and go to state 25
    CMP_EQ       shift, and go to state 26
    CMP_LEQ      shift, and go to state 27
    CMP_GEQ      shift, and go to state 28
    CMP_NEQ      shift, and go to state 29
    '+'          shift, and go to state 30
    '-'          shift, and go to state 31
    '*'          shift, and go to state 32
    '/'          shift, and go to state 33
    '%'          shift, and go to state 34
    ')'          shift, and go to state 38


State 21

   24 boolean_expr: boolean_expr • OR boolean_expr
   25             | boolean_expr • AND boolean_expr
   27             | '(' boolean_expr • ')'

    OR   shift, and go to state 35
    AND  shift, and go to state 36
    ')'  shift, and go to state 39


State 22

    1 select_stmt: SELECT value_expr_list ';' •

    $default  reduce using rule 1 (select_stmt)


State 23

    3 value_expr_list: value_expr ',' • value_expr

    STRING   shift, and go to state 3
    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    BOOLEAN  shift, and go to state 6
    NOT      shift, and go to state 7
    '-'      shift, and go to state 8
    '('      shift, and go to state 9

    value_expr       go to state 40
    arithmetic_expr  go to state 12
    string_expr      go to state 13
    boolean_expr     go to state 14


State 24

   18 boolean_expr: arithmetic_expr CMP_LESS • arithmetic_expr

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    '-'      shift, and go to state 8
    '('      shift, and go to state 18

    arithmetic_expr  go to state 41


State 25

   19 boolean_expr: arithmetic_expr CMP_GREATER • arithmetic_expr

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    '-'      shift, and go to state 8
    '('      shift, and go to state 18

    arithmetic_expr  go to state 42


State 26

   20 boolean_expr: arithmetic_expr CMP_EQ • arithmetic_expr

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    '-'      shift, and go to state 8
    '('      shift, and go to state 18

    arithmetic_expr  go to state 43


State 27

   21 boolean_expr: arithmetic_expr CMP_LEQ • arithmetic_expr

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    '-'      shift, and go to state 8
    '('      shift, and go to state 18

    arithmetic_expr  go to state 44


State 28

   22 boolean_expr: arithmetic_expr CMP_GEQ • arithmetic_expr

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    '-'      shift, and go to state 8
    '('      shift, and go to state 18

    arithmetic_expr  go to state 45


State 29

   23 boolean_expr: arithmetic_expr CMP_NEQ • arithmetic_expr

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    '-'      shift, and go to state 8
    '('      shift, and go to state 18

    arithmetic_expr  go to state 46


State 30

    9 arithmetic_expr: arithmetic_expr '+' • arithmetic_expr

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    '-'      shift, and go to state 8
    '('      shift, and go to state 18

    arithmetic_expr  go to state 47


State 31

   10 arithmetic_expr: arithmetic_expr '-' • arithmetic_expr

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    '-'      shift, and go to state 8
    '('      shift, and go to state 18

    arithmetic_expr  go to state 48


State 32

   11 arithmetic_expr: arithmetic_expr '*' • arithmetic_expr

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    '-'      shift, and go to state 8
    '('      shift, and go to state 18

    arithmetic_expr  go to state 49


State 33

   12 arithmetic_expr: arithmetic_expr '/' • arithmetic_expr

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    '-'      shift, and go to state 8
    '('      shift, and go to state 18

    arithmetic_expr  go to state 50


State 34

   13 arithmetic_expr: arithmetic_expr '%' • arithmetic_expr

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    '-'      shift, and go to state 8
    '('      shift, and go to state 18

    arithmetic_expr  go to state 51


State 35

   24 boolean_expr: boolean_expr OR • boolean_expr

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    BOOLEAN  shift, and go to state 6
    NOT      shift, and go to state 7
    '-'      shift, and go to state 8
    '('      shift, and go to state 9

    arithmetic_expr  go to state 16
    boolean_expr     go to state 52


State 36

   25 boolean_expr: boolean_expr AND • boolean_expr

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    BOOLEAN  shift, and go to state 6
    NOT      shift, and go to state 7
    '-'      shift, and go to state 8
    '('      shift, and go to state 9

    arithmetic_expr  go to state 16
    boolean_expr     go to state 53


State 37

    9 arithmetic_expr: arithmetic_expr • '+' arithmetic_expr
   10                | arithmetic_expr • '-' arithmetic_expr
   11                | arithmetic_expr • '*' arithmetic_expr
   12                | arithmetic_expr • '/' arithmetic_expr
   13                | arithmetic_expr • '%' arithmetic_expr
   15                | '(' arithmetic_expr • ')'

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33
    '%'  shift, and go to state 34
    ')'  shift, and go to state 38


State 38

   15 arithmetic_expr: '(' arithmetic_expr ')' •

    $default  reduce using rule 15 (arithmetic_expr)


State 39

   27 boolean_expr: '(' boolean_expr ')' •

    $default  reduce using rule 27 (boolean_expr)


State 40

    3 value_expr_list: value_expr ',' value_expr •

    $default  reduce using rule 3 (value_expr_list)


State 41

    9 arithmetic_expr: arithmetic_expr • '+' arithmetic_expr
   10                | arithmetic_expr • '-' arithmetic_expr
   11                | arithmetic_expr • '*' arithmetic_expr
   12                | arithmetic_expr • '/' arithmetic_expr
   13                | arithmetic_expr • '%' arithmetic_expr
   18 boolean_expr: arithmetic_expr CMP_LESS arithmetic_expr •

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33
    '%'  shift, and go to state 34

    $default  reduce using rule 18 (boolean_expr)


State 42

    9 arithmetic_expr: arithmetic_expr • '+' arithmetic_expr
   10                | arithmetic_expr • '-' arithmetic_expr
   11                | arithmetic_expr • '*' arithmetic_expr
   12                | arithmetic_expr • '/' arithmetic_expr
   13                | arithmetic_expr • '%' arithmetic_expr
   19 boolean_expr: arithmetic_expr CMP_GREATER arithmetic_expr •

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33
    '%'  shift, and go to state 34

    $default  reduce using rule 19 (boolean_expr)


State 43

    9 arithmetic_expr: arithmetic_expr • '+' arithmetic_expr
   10                | arithmetic_expr • '-' arithmetic_expr
   11                | arithmetic_expr • '*' arithmetic_expr
   12                | arithmetic_expr • '/' arithmetic_expr
   13                | arithmetic_expr • '%' arithmetic_expr
   20 boolean_expr: arithmetic_expr CMP_EQ arithmetic_expr •

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33
    '%'  shift, and go to state 34

    $default  reduce using rule 20 (boolean_expr)


State 44

    9 arithmetic_expr: arithmetic_expr • '+' arithmetic_expr
   10                | arithmetic_expr • '-' arithmetic_expr
   11                | arithmetic_expr • '*' arithmetic_expr
   12                | arithmetic_expr • '/' arithmetic_expr
   13                | arithmetic_expr • '%' arithmetic_expr
   21 boolean_expr: arithmetic_expr CMP_LEQ arithmetic_expr •

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33
    '%'  shift, and go to state 34

    $default  reduce using rule 21 (boolean_expr)


State 45

    9 arithmetic_expr: arithmetic_expr • '+' arithmetic_expr
   10                | arithmetic_expr • '-' arithmetic_expr
   11                | arithmetic_expr • '*' arithmetic_expr
   12                | arithmetic_expr • '/' arithmetic_expr
   13                | arithmetic_expr • '%' arithmetic_expr
   22 boolean_expr: arithmetic_expr CMP_GEQ arithmetic_expr •

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33
    '%'  shift, and go to state 34

    $default  reduce using rule 22 (boolean_expr)


State 46

    9 arithmetic_expr: arithmetic_expr • '+' arithmetic_expr
   10                | arithmetic_expr • '-' arithmetic_expr
   11                | arithmetic_expr • '*' arithmetic_expr
   12                | arithmetic_expr • '/' arithmetic_expr
   13                | arithmetic_expr • '%' arithmetic_expr
   23 boolean_expr: arithmetic_expr CMP_NEQ arithmetic_expr •

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33
    '%'  shift, and go to state 34

    $default  reduce using rule 23 (boolean_expr)


State 47

    9 arithmetic_expr: arithmetic_expr • '+' arithmetic_expr
    9                | arithmetic_expr '+' arithmetic_expr •
   10                | arithmetic_expr • '-' arithmetic_expr
   11                | arithmetic_expr • '*' arithmetic_expr
   12                | arithmetic_expr • '/' arithmetic_expr
   13                | arithmetic_expr • '%' arithmetic_expr

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33
    '%'  shift, and go to state 34

    '%'       [reduce using rule 9 (arithmetic_expr)]
    $default  reduce using rule 9 (arithmetic_expr)


State 48

    9 arithmetic_expr: arithmetic_expr • '+' arithmetic_expr
   10                | arithmetic_expr • '-' arithmetic_expr
   10                | arithmetic_expr '-' arithmetic_expr •
   11                | arithmetic_expr • '*' arithmetic_expr
   12                | arithmetic_expr • '/' arithmetic_expr
   13                | arithmetic_expr • '%' arithmetic_expr

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33
    '%'  shift, and go to state 34

    '%'       [reduce using rule 10 (arithmetic_expr)]
    $default  reduce using rule 10 (arithmetic_expr)


State 49

    9 arithmetic_expr: arithmetic_expr • '+' arithmetic_expr
   10                | arithmetic_expr • '-' arithmetic_expr
   11                | arithmetic_expr • '*' arithmetic_expr
   11                | arithmetic_expr '*' arithmetic_expr •
   12                | arithmetic_expr • '/' arithmetic_expr
   13                | arithmetic_expr • '%' arithmetic_expr

    '%'  shift, and go to state 34

    '%'       [reduce using rule 11 (arithmetic_expr)]
    $default  reduce using rule 11 (arithmetic_expr)


State 50

    9 arithmetic_expr: arithmetic_expr • '+' arithmetic_expr
   10                | arithmetic_expr • '-' arithmetic_expr
   11                | arithmetic_expr • '*' arithmetic_expr
   12                | arithmetic_expr • '/' arithmetic_expr
   12                | arithmetic_expr '/' arithmetic_expr •
   13                | arithmetic_expr • '%' arithmetic_expr

    '%'  shift, and go to state 34

    '%'       [reduce using rule 12 (arithmetic_expr)]
    $default  reduce using rule 12 (arithmetic_expr)


State 51

    9 arithmetic_expr: arithmetic_expr • '+' arithmetic_expr
   10                | arithmetic_expr • '-' arithmetic_expr
   11                | arithmetic_expr • '*' arithmetic_expr
   12                | arithmetic_expr • '/' arithmetic_expr
   13                | arithmetic_expr • '%' arithmetic_expr
   13                | arithmetic_expr '%' arithmetic_expr •

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33
    '%'  shift, and go to state 34

    '+'       [reduce using rule 13 (arithmetic_expr)]
    '-'       [reduce using rule 13 (arithmetic_expr)]
    '*'       [reduce using rule 13 (arithmetic_expr)]
    '/'       [reduce using rule 13 (arithmetic_expr)]
    '%'       [reduce using rule 13 (arithmetic_expr)]
    $default  reduce using rule 13 (arithmetic_expr)


State 52

   24 boolean_expr: boolean_expr • OR boolean_expr
   24             | boolean_expr OR boolean_expr •
   25             | boolean_expr • AND boolean_expr

    AND  shift, and go to state 36

    $default  reduce using rule 24 (boolean_expr)


State 53

   24 boolean_expr: boolean_expr • OR boolean_expr
   25             | boolean_expr • AND boolean_expr
   25             | boolean_expr AND boolean_expr •

    $default  reduce using rule 25 (boolean_expr)
